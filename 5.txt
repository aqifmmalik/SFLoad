<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Final Salesforce Manual Driver Test">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Salesforce User">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig guiclass="com.googlecode.jmeter.plugins.webdriver.config.gui.ChromeDriverConfigGui" testclass="com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig" testname="jp@gc - Chrome Driver Config">
          <boolProp name="WebDriverConfig.acceptinsecurecerts">false</boolProp>
          <boolProp name="WebDriverConfig.reset_per_iteration">false</boolProp>
          <stringProp name="WebDriverConfig.driver_path">C:\JMeter\chromedriver.exe</stringProp>
          <boolProp name="WebDriverConfig.dev_mode">false</boolProp>
          <boolProp name="WebDriverConfig.headless">false</boolProp>
          <boolProp name="WebDriverConfig.maximize_browser">true</boolProp>
          <stringProp name="ChromeDriverConfig.additional_args"></stringProp>
          <stringProp name="ChromeDriverConfig.binary_path"></stringProp>
          <stringProp name="WebDriverConfig.proxy_type">SYSTEM</stringProp>
          <stringProp name="WebDriverConfig.proxy_pac_url"></stringProp>
          <stringProp name="WebDriverConfig.http_host"></stringProp>
          <intProp name="WebDriverConfig.http_port">0</intProp>
          <boolProp name="WebDriverConfig.use_http_for_all_protocols">true</boolProp>
          <stringProp name="WebDriverConfig.https_host"></stringProp>
          <intProp name="WebDriverConfig.https_port">0</intProp>
          <boolProp name="WebDriverConfig.use_ftp_proxy">true</boolProp>
          <stringProp name="WebDriverConfig.ftp_host"></stringProp>
          <intProp name="WebDriverConfig.ftp_port">0</intProp>
          <boolProp name="WebDriverConfig.use_socks_proxy">true</boolProp>
          <stringProp name="WebDriverConfig.socks_host"></stringProp>
          <intProp name="WebDriverConfig.socks_port">0</intProp>
          <stringProp name="WebDriverConfig.no_proxy"></stringProp>
          <stringProp name="WebDriverConfig.custom_capabilites"></stringProp>
        </com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="1. Login and Navigate to Authorizations" enabled="true">
          <stringProp name="WebDriverSampler.script">// This script does NOT use WebDriverManager. It relies on the Chrome Driver Config above.

// Use WDS (WebDriverSampler) variables for proper JMeter integration.
WDS.sampleResult.sampleStart()
WDS.log.info(&quot;Starting Salesforce Test Sampler&quot;)

// The browser is already opened by the Chrome Driver Config.
WDS.browser.get(&quot;https://test-crm--fullsbx.sandbox.my.salesforce.com/&quot;)
WDS.log.info(&quot;Navigated to Salesforce URL.&quot;)

// Import necessary classes
import org.openqa.selenium.By
import org.openqa.selenium.support.ui.WebDriverWait
import org.openqa.selenium.support.ui.ExpectedConditions
import java.time.Duration

// Create a wait object to be reused throughout the script.
def wait = new WebDriverWait(WDS.browser, Duration.ofSeconds(30))

try {
    // --- Step 2: Login ---
    WDS.log.info(&quot;Attempting to log in...&quot;)
    def usernameField = wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;username&quot;)))
    usernameField.sendKeys(&quot;testuser_m_con@testhub.org.fullsbx&quot;)
    WDS.browser.findElement(By.id(&quot;password&quot;)).sendKeys(&quot;test@1&quot;)
    WDS.browser.findElement(By.id(&quot;Login&quot;)).click()
    WDS.log.info(&quot;Login form submitted.&quot;)

    // --- Step 3: Navigate to Authorizations ---
    def patientDataTab = wait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//a/span[text()=&apos;Patient Data&apos;]&quot;)))
    patientDataTab.click()
    WDS.log.info(&quot;Clicked on &apos;Patient Data&apos; tab.&quot;)

    def authorizationsTab = wait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//a/span[text()=&apos;Authorizations&apos;]&quot;)))
    authorizationsTab.click()
    WDS.log.info(&quot;Clicked on &apos;Authorizations&apos; tab.&quot;)

    // --- Step 4: Interact with Elements on the Authorizations Page ---
    def specificButton = wait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;(//button[@type=&apos;button&apos;])[50]&quot;)))
    specificButton.click()
    WDS.log.info(&quot;Clicked on the specific button.&quot;)

    // --- Step 5: Assert Element is Visible ---
    WDS.log.info(&quot;Starting final element visibility check...&quot;)
    def finalElementLocator = By.xpath(&quot;//flexipage-tab2[@id=&apos;tab-10&apos;]//lightning-datatable//tbody/tr[1]/th/lightning-primitive-cell-factory/span&quot;)
    wait.until(ExpectedConditions.visibilityOfElementLocated(finalElementLocator))
    WDS.log.info(&quot;SUCCESS: Final element was found and is visible.&quot;)
    
    WDS.sampleResult.setSuccessful(true)
    WDS.sampleResult.setResponseMessage(&quot;Successfully logged in and verified element visibility.&quot;)
    
} catch (Exception e) {
    WDS.log.error(&quot;Script failed: &quot; + e.getMessage())
    WDS.sampleResult.setSuccessful(false)
    WDS.sampleResult.setResponseMessage(&quot;Failure: &quot; + e.getMessage())
    
} finally {
    WDS.sampleResult.sampleEnd()
}
</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">groovy</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
